name: Quality Gate Action
description: "This action will check the quality gate of the project"
inputs:
  github_token:
    description: "The GitHub token for the repository"
    required: true
  sonar_token:
    description: "The SonarCloud token for the repository"
    required: true
  docs_url:
    description: "The URL of the documentation"
    required: false
    default: ""
  sonar_check_timeout:
    description: "The timeout in minutes for the SonarCloud check"
    type: integer
    required: false
    default: 60
  unit_test_check_timeout:
    description: "The timeout in minutes for the unit test check"
    type: integer
    required: false
    default: 60
  unit_test_init_wait_timeout:
    description: "The wait time in minutes for the unit test init"
    type: integer
    required: false
    default: 30
  gates_to_skip:
    description: "The gates to skip (code_review, coverage, owner_approval, static_analysis, unit_test)"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: "Setup default environment for all steps"
      shell: bash
      run: |
        echo "ACTION_PATH=${{ github.action_path }}" >> $GITHUB_ENV
        echo "DOCS_URL=${{ inputs.docs_url }}" >> $GITHUB_ENV
        echo "GATES_TO_SKIP=${{ inputs.gates_to_skip }}" >> $GITHUB_ENV
        echo "GITHUB_DEFAULT_BRANCH=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV
        echo "GITHUB_REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
        echo "GITHUB_PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV
        echo "GITHUB_TOKEN=${{ inputs.github_token }}" >> $GITHUB_ENV
        echo "PR_HEAD_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
        echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV
        echo "REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
        echo "SONAR_TOKEN=${{ inputs.sonar_token }}" >> $GITHUB_ENV
        echo "SONAR_CHECK_TIMEOUT=${{ inputs.sonar_check_timeout }}" >> $GITHUB_ENV
        echo "UNIT_TEST_CHECK_TIMEOUT=${{ inputs.unit_test_check_timeout }}" >> $GITHUB_ENV
        echo "UNIT_TEST_INIT_WAIT_TIMEOUT=${{ inputs.unit_test_init_wait_timeout }}" >> $GITHUB_ENV

    - name: "Log Skip Gates Configuration"
      if: ${{ inputs.gates_to_skip != '' }}
      shell: bash
      run: |
        source ${{ env.ACTION_PATH }}/src/utils.sh
        _log_gates_to_skip_configuration

    - name: "Check Unit Test Pass"
      shell: bash
      run: |
        source ${{ env.ACTION_PATH }}/src/unit_test.sh
        _check_unit_test

    - name: "Check Repository Configs"
      shell: bash
      run: |
        source ${{ env.ACTION_PATH }}/src/repo_configs.sh
        _check_repo_configs

    - name: "Check SonarCloud Analysis Pass"
      shell: bash
      run: |
        source ${{ env.ACTION_PATH }}/src/sonarcloud_analysis.sh
        _check_sonarcloud_analysis

    - name: "Report"
      shell: bash
      run: |
        source ${{ env.ACTION_PATH }}/src/report.sh
        _send_report
