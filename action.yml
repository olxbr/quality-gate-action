name: Quality Gate Action
description: "This action will check the quality gate of the project"
inputs:
  github_token:
    description: "The GitHub token for the repository"
    required: true
  sonar_token:
    description: "The SonarCloud token for the repository"
    required: true
  docs_url:
    description: "The URL of the documentation"
    required: false
    default: ""
  sonar_check_timeout:
    description: "The timeout in minutes for the SonarCloud check"
    type: integer
    required: false
    default: 60

runs:
  using: "composite"
  steps:
    - name: "Check Unit Test Pass"
      shell: bash
      env:
        REPOSITORY: ${{ github.repository }}
        PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        GITHUB_TOKEN: ${{ inputs.github_token }}
        ACTION_PATH: ${{github.action_path}}
      run: |
        source ${{ env.ACTION_PATH }}/src/unit_test.sh
        _check_unit_test

    - name: "Check Repository Configs"
      shell: bash
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_TOKEN: ${{ inputs.github_token }}
        ACTION_PATH: ${{ github.action_path }}
      run: |
        source ${{ env.ACTION_PATH }}/src/repo_configs.sh
        _check_repo_configs

    - name: "Check SonarCloud Analysis Pass"
      shell: bash
      env:
        REPOSITORY: ${{ github.repository }}
        PR_NUMBER: ${{ github.event.number }}
        PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        SONAR_TOKEN: ${{ inputs.sonar_token }}
        SONAR_CHECK_TIMEOUT: ${{ inputs.sonar_check_timeout }}
        ACTION_PATH: ${{ github.action_path }}
      run: |
        source ${{ env.ACTION_PATH }}/src/sonarcloud_analysis.sh
        _check_sonarcloud_analysis

    - name: "Report"
      shell: bash
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_PR_NUMBER: ${{ github.event.number }}
        GITHUB_TOKEN: ${{ inputs.github_token }}
        ACTION_PATH: ${{ github.action_path }}
        DOCS_URL: ${{ inputs.docs_url }}
      run: |
        source ${{ env.ACTION_PATH }}/src/report.sh
        _send_report
